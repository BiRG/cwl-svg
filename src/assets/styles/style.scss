@import "variables";

svg.cwl-workflow {

  fill: $background;
  font-family: $font-family;
  color: $font-color;
  padding: 0;
  display: block;
  width: 100%;

  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0);

  [tabindex]:active,
  [tabindex]:focus {
    outline: none;
  }

  .hidden {
    display: none;
  }

  .workflow {
    @extend .noselect;

  }

  .label {
    text-anchor: middle;
    fill: $font-color;

    paint-order: stroke;
    stroke: $background;
    stroke-width: 4px;
    stroke-linecap: butt;
    stroke-linejoin: miter;

  }

  .node {


    .icon {
      stroke: $background;
      stroke-width: 3px;
      fill: $background;
      stroke-linecap: round;

      &.icon-workflow {
        fill: $background;
      }
    }

    &.input, &.output {
      .inner {
        fill: $color-neutral;
      }
    }

    &.edge-hover {
      .outer {
        stroke: $port-highlight-color;
      }
    }

    .core {
      transition: all .3s;
      stroke: $background;
      stroke-width: 0;
      cursor: pointer;

      .inner,
      .node-icon {
        pointer-events: none;
      }
    }

    &:hover {
      .port .label {
        transition: all .1s;
        opacity: 1;
      }
    }

    &.hasUpdate {
      .inner {
        fill: $color-warning;
      }
    }

    .outer {
      stroke: $node-outer-color;
      stroke-width: 2px;
      fill: $background;
    }

    .inner {
      stroke: 0;
      fill: $node-background-color;
    }

    .port {
      stroke: 0;
      fill: $port-background-color;
      cursor: pointer;
      position: relative;

      &:hover,
      &.highlighted {
        stroke: white;
        stroke-width: 2px;
      }

      &.highlighted,
      &.visible {
        .label {
          opacity: 1;
        }
      }

      &.output-port .label {
        text-anchor: start;
        transform: translate(10px, 0);
      }

      &.input-port .label {
        text-anchor: end;
        transform: translate(-10px, 0);
      }

      .label {
        alignment-baseline: middle;
        transition: all .1s;
        fill: $port-label-color;
        font-size: .9em;
        user-select: none;
        pointer-events: none;
        opacity: 0;
      }
    }

    &.preferred-node {
      &.right .input-port,
      &.left .output-port {
        .label {
          opacity: .7;
        }

        &.preferred-port .label {
          opacity: 1 !important;
        }

      }

    }
  }

  .edge {

    &:hover .inner {
      stroke: $port-highlight-color;
    }

    .inner, .outer {
      fill: none;
      stroke-linecap: round;
    }

    .inner {
      stroke-width: $edge-inner-width;
      stroke: $edge-inner-color;
    }
    .outer {
      stroke-width: 7px;
      stroke: $edge-outer-color;
    }

    .label {
      font-size: .8em;
    }
  }

  .unselectable {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: pointer;
  }

  //
  .node-input-hover-zone,
  .node-output-hover-zone {
    fill: transparent;
  }

  .node-output-hover-zone,
  .node-input-hover-zone {
    pointer-events: none;
  }

}

.noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}